#include "VertexBuffer.hpp"
#include <glew.h>
#include "Renderer.hpp"


VertexBuffer::VertexBuffer(const void* data, unsigned int size) 
{
	GLCall(glGenBuffers(1, &m_bufferID)); 
	GLCall(glBindBuffer(GL_ARRAY_BUFFER, m_bufferID));

	//Put data into the buffer generated by glGenBuffer
	GLCall(glBufferData(
		GL_ARRAY_BUFFER,														//Tells OpenGL the type of buffer
		size,																	//Size in bytes of the new buffer (size of vector * size of each struct in vec)
		data,																	//pointer to the first data to be copied into the buffer
		GL_STATIC_DRAW															//Hint for draw mode
	));
}

VertexBuffer::~VertexBuffer() 
{
	GLCall(glDeleteBuffers(1, &m_bufferID));
}


void VertexBuffer::Bind() const
{
	GLCall(glBindBuffer(GL_ARRAY_BUFFER, m_bufferID));
}


void VertexBuffer::Unbind() const
{
	glBindBuffer(GL_ARRAY_BUFFER, 0);
}

